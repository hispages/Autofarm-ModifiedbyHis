

local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")

-- CONFIG
local PLACE_ID = game.PlaceId     
local ATTEMPTS_PER_SECOND = 12     -- frekuensi hop (2x/s)
local INTERVAL = 1 / ATTEMPTS_PER_SECOND
local START_DELAY = 10             -- delay awal sebelum mulai (detik)
local LIMIT_PER_REQUEST = 100     -- max server per request (100)

-- fungsi ambil daftar server publik
local function fetch_servers(cursor)
	local url = string.format(
		"https://games.roblox.com/v1/games/%d/servers/Public?limit=%d",
		PLACE_ID,
		LIMIT_PER_REQUEST
	)
	if cursor and cursor ~= "" then
		url = url .. "&cursor=" .. HttpService:UrlEncode(cursor)
	end

	local success, res = pcall(function()
		return HttpService:GetAsync(url)
	end)
	if not success then return nil end
	return HttpService:JSONDecode(res)
end

-- cari server kandidat
local function find_server()
	local cursor = nil
	for _ = 1, 5 do -- max 5 halaman
		local data = fetch_servers(cursor)
		if not data then return nil end

		for _, srv in ipairs(data.data) do
			if srv.id ~= game.JobId and srv.playing < srv.maxPlayers then
				return srv.id
			end
		end

		cursor = data.nextPageCursor
		if not cursor then break end
	end
	return nil
end

-- MAIN
task.wait(START_DELAY)
print("[ServerHop] Mulai mencari server...")

while true do
	local instanceId = find_server()
	if instanceId then
		print("[ServerHop] Ketemu server baru, teleport...")
		TeleportService:TeleportToPlaceInstance(PLACE_ID, instanceId, Players.LocalPlayer)
		break -- setelah teleport, script berhenti
	else
		warn("[ServerHop] Tidak ada server, coba lagi...")
	end
	task.wait(INTERVAL)
end
