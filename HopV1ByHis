local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")

local player = Players.LocalPlayer
local placeId = game.PlaceId

local function hopServer()
    local servers = {}
    local cursor = ""
    local success, result

    repeat
        success, result = pcall(function()
            return HttpService:JSONDecode(
                game:HttpGetAsync(
                    "https://games.roblox.com/v1/games/"..placeId.."/servers/Public?sortOrder=Asc&limit=100"..(cursor ~= "" and "&cursor="..cursor or "")
                )
            )
        end)

        if success and result and result.data then
            for _, server in pairs(result.data) do
                if server.playing < server.maxPlayers 
                and server.id ~= game.JobId then
                    table.insert(servers, server.id)
                end
            end
            cursor = result.nextPageCursor or ""
        else
            break
        end
    until cursor == "" or #servers > 0

    if #servers > 0 then
        local randomServer = servers[math.random(1, #servers)]
        local ok, err = pcall(function()
            TeleportService:TeleportToPlaceInstance(placeId, randomServer, player)
        end)
        if not ok then
            warn("[HopServer] Teleport gagal:", err)
            return false
        end
    else
        local ok, err = pcall(function()
            TeleportService:Teleport(placeId, player)
        end)
        if not ok then
            warn("[HopServer] Teleport gagal:", err)
            return false
        end
    end

    return true
end

-- Jalankan
task.wait(10) -- delay awal sebelum eksekusi (atur sesuai kebutuhan)

while true do
    local success = hopServer()
    if success then break end
    task.wait(0.08) -- frekuensi 2 percobaan per detik
end
